# Generated by Django 4.1 on 2022-09-04 15:23

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'Admin'), (2, 'Staff'), (3, 'Student')], default=1, max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, default='', max_length=200)),
                ('description', models.TextField(blank=True, default='')),
                ('file', models.FileField(blank=True, upload_to='')),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('reported_by', models.CharField(blank=True, default='', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(default='', max_length=15)),
                ('created_by', models.CharField(blank=True, default='', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('about', models.TextField(blank=True)),
                ('department', models.CharField(blank=True, default='', max_length=50)),
                ('college', models.CharField(blank=True, default='', max_length=100)),
                ('interest', models.CharField(blank=True, default='', max_length=30)),
                ('country', models.CharField(blank=True, default='India', max_length=20)),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('phone_no', models.IntegerField(blank=True, default=0)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('facebook_profile', models.URLField(blank=True)),
                ('instagram_profile', models.URLField(blank=True)),
                ('linkedin_profile', models.URLField(blank=True)),
                ('twitter_profile', models.URLField(blank=True)),
                ('github_profile', models.URLField(blank=True)),
                ('kaggle_profile', models.URLField(blank=True)),
                ('portfolio', models.URLField(blank=True, default='')),
                ('projects', models.IntegerField(blank=True, default=0)),
                ('internship', models.IntegerField(blank=True, default=0)),
                ('posts', models.IntegerField(blank=True, default=0)),
                ('resume', models.FileField(blank=True, upload_to='')),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('position', models.CharField(blank=True, default='', max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(default='', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('department', models.CharField(blank=True, default='', max_length=50)),
                ('college', models.CharField(blank=True, default='', max_length=100)),
                ('interest', models.CharField(blank=True, default='', max_length=50)),
                ('country', models.CharField(blank=True, default='', max_length=30)),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('phone_no', models.IntegerField(blank=True, default=0)),
                ('about', models.TextField(blank=True, default='')),
                ('cv', models.FileField(blank=True, upload_to='')),
                ('experiance', models.IntegerField(blank=True, default=0)),
                ('posts', models.IntegerField(blank=True, default=0)),
                ('facebook_profile', models.URLField(blank=True)),
                ('instagram_profile', models.URLField(blank=True)),
                ('linkedin_profile', models.URLField(blank=True)),
                ('twitter_profile', models.URLField(blank=True)),
                ('github_profile', models.URLField(blank=True)),
                ('kaggle_profile', models.URLField(blank=True)),
                ('portfolio', models.URLField(default='')),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('mentor', models.IntegerField(blank=True, default=0)),
                ('position', models.CharField(blank=True, default='', max_length=100)),
                ('is_permanent', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(default='', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=80)),
                ('sub_title', models.CharField(blank=True, default='', max_length=50)),
                ('body', ckeditor.fields.RichTextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, default='', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', ckeditor.fields.RichTextField(default='')),
                ('commented_by', models.CharField(blank=True, default='', max_length=50)),
                ('commented_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='tech.posts')),
            ],
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(blank=True, upload_to='')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(default='', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
